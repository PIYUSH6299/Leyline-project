name: deploy flask-rest-api

# Triggered manually from the GitHub Actions tab
on:
  workflow_dispatch:

jobs:
  flask-rest-api:
    name: flask-rest-api
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull flask-rest-api-web
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/flask-rest-api-web:latest

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # Step 2: Install the gke-gcloud-auth-plugin using gcloud SDK
    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin

    # Step 3: Configure kubectl to connect to the GKE cluster
    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
        --zone ${{ secrets.GKE_CLUSTER_ZONE }} \
        --project ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Deploy Application using Helm
      run: |
        helm upgrade --install leyline ./my-rest-api

    - name: Retrieve LoadBalancer IPs
      run: |
        echo "flask-rest-api service."
        flask-rest-apiIp=""
        flask-rest-apiPort=""
        while [ -z $flask-rest-apiIp ]; do
            sleep 5
            flask-rest-apiIp=$(kubectl get service my-rest-api --output=jsonpath='{.status.loadBalancer.ingress[0].ip}')
            flask-rest-apiPort=$(kubectl get service my-rest-api --output=jsonpath='{.spec.ports[0].port}')
        done
        echo "flask-rest-api service is accessible at: $flask-rest-apiIp:$flask-rest-apiPort"

    - name: Output IPs as Job Output (Optional)
      id: lb-ips
      run: |
        echo "::set-output name=my-rest-apiIp::$my-rest-apiIp"
        echo "::set-output name=my-rest-apiPort::$my-rest-apiPort"